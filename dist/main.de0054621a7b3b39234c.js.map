{"version":3,"sources":["webpack:///./src/index.tsx","webpack:///./src/components/Nav.tsx","webpack:///./src/components/Nav.style.ts","webpack:///./src/App.tsx","webpack:///./src/components/common/GlobalDialog.tsx","webpack:///./src/serviceWorker.ts","webpack:///./src/pages/containers/RootContainer.tsx","webpack:///./src/pages/Page404.tsx","webpack:///./src/pages/containers/Main.tsx"],"names":["render","document","getElementById","serviceWorker","unregister","withRouter","props","classes","makeStyles","theme","user","setGuest","isPopOverOpen","setIsPopOverOpen","PopOverRoot","useRef","path","history","location","pathname","tab","route","HOTS","ROOT","tab_value","setTabValue","useEffect","body","root","createElement","hidePopOver","e","contains","currentTarget","addEventListener","removeEventListener","className","position","muiRoot","toolBar","color","title","component","to","logo","navAndSearch","value","onChange","new_value","push","indicator","tabs","customTabRoot","selected","selectedTab","label","EXPLORE","searchRoot","input","placeholder","inputProps","customIconRoot","menuButton","ref","onClick","isGuest","LOGIN","paper","customMenu","anchorEl","current","open","AppHeaderProfileMenu","map","item","index","icon","link","key","customMenuItem","hover","id","customListItemIcon","dangerouslySetInnerHTML","__html","primary","genBaseStyle","maxHeight","NavHeight","width","zIndex","backgroundColor","palette","background","default","display","justifyContent","height","margin","maxWidth","NavWidth","alignItems","marginRight","spacing","flexGrow","padding","marginLeft","flex","divider","minWidth","top","PopOverRootWidth","fontSize","lineHeight","PopOverElementHeight","minHeight","content","onConfirm","isCancelable","setDiaLog","_onConfirm","onClose","dividers","gutterBottom","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","URL","process","env","PUBLIC_URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","reload","checkValidServiceWorker","dialog","ThemeProvider","ThemeMap","BrowserRouter","Switch","Route","REGISTER","useTheme","style","marginTop","DRAFT","WRITE","ABOUT","exact"],"mappings":"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","file":"main.de0054621a7b3b39234c.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React, {useState, useContext, useRef, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {Link as RLink, withRouter} from 'react-router-dom';\nimport {rootContext} from '../contexts/RootContext';\nimport {AppHeaderProfileMenu} from '../utils/consts/PageConfig';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport Link from '@material-ui/core/Link';\nimport genNavTheme from './Nav.style';\nimport {isGuest} from '../utils/helpers/user';\nimport * as route from '../utils/consts/Route';\n\nconst Nav: React.FC = (props: any) => {\n  const classes = makeStyles(theme => genNavTheme(theme) as any)() as any;\n  const {user, setGuest} = useContext(rootContext);\n  const [isPopOverOpen, setIsPopOverOpen] = useState(false);\n  const PopOverRoot = useRef(null);\n  const path = props.history.location.pathname;\n  // TODO: what if add other tables use switch later?\n  const tab: string = path === route.HOTS ? path : route.ROOT;\n  const [tab_value, setTabValue]: any = useState(tab);\n\n  const onTabChange = (e: any, new_value: string) => {\n    props.history.push(new_value);\n    setTabValue(new_value);\n  };\n\n  useEffect(() => {\n    const body = document.body;\n    const root = document.getElementById('root') || document.createElement('div');\n    const hidePopOver = (e: any) => {\n      if (!root.contains(e.currentTarget)) {\n        setIsPopOverOpen(false);\n      }\n    };\n    body.addEventListener('click', hidePopOver);\n    return () => {\n      body.removeEventListener('click', hidePopOver);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" classes={{root: classes.muiRoot}}>\n        <Toolbar className={classes.toolBar}>\n          <Link color=\"textPrimary\" title=\"\" component={RLink} to={route.ROOT}>\n            <div className={classes.logo} />\n          </Link>\n          <div className={classes.navAndSearch}>\n            <Tabs value={tab_value} onChange={onTabChange} classes={{indicator: classes.tabs}}>\n              <Tab\n                classes={{\n                  root: classes.customTabRoot,\n                  selected: classes.selectedTab,\n                }}\n                label=\"首页\"\n                value={route.ROOT}\n              />\n              <Tab\n                classes={{\n                  root: classes.customTabRoot,\n                  selected: classes.selectedTab,\n                }}\n                label=\"发现\"\n                value={route.EXPLORE}\n              />\n            </Tabs>\n            <Paper className={classes.searchRoot}>\n              <InputBase\n                className={classes.input}\n                placeholder=\"Search\"\n                inputProps={{'aria-label': 'search google maps'}}\n              />\n              <IconButton aria-label=\"search\" classes={{root: classes.customIconRoot}}>\n                <SearchIcon />\n              </IconButton>\n            </Paper>\n          </div>\n          <IconButton\n            className={classes.menuButton}\n            ref={PopOverRoot}\n            onClick={() => {\n              if (isGuest(user)) {\n                props.history.push(route.LOGIN);\n                return;\n              }\n              setIsPopOverOpen(true);\n            }}\n          >\n            <AccountBoxIcon />\n          </IconButton>\n          <Menu\n            classes={{paper: classes.customMenu}}\n            anchorEl={PopOverRoot.current}\n            open={isPopOverOpen}\n          >\n            {AppHeaderProfileMenu.map((item: any, index: number) => {\n              const {label, icon, link, onClick} = item;\n              const _wrappedClick = () => {\n                setIsPopOverOpen(false);\n                if (link) {\n                  setTabValue(false);\n                  typeof link === 'string'\n                    ? props.history.push(link)\n                    : props.history.push(link(user.id));\n                  return;\n                }\n                onClick(setGuest);\n                props.history.push(route.LOGIN);\n              };\n              return (\n                <MenuItem\n                  key={index}\n                  classes={{\n                    root: clsx(classes.customMenuItem, classes.hover),\n                  }}\n                  onClick={_wrappedClick}\n                >\n                  <ListItemIcon classes={{root: classes.customListItemIcon}}>\n                    <div dangerouslySetInnerHTML={{__html: icon}} />\n                  </ListItemIcon>\n                  <ListItemText primary={label} />\n                </MenuItem>\n              );\n            })}\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withRouter(Nav);\n","import {Theme} from '@material-ui/core/styles';\nimport {genBaseStyle} from '../utils/consts/theme';\nimport {NavWidth, NavHeight, PopOverRootWidth, PopOverElementHeight} from '../utils/Layout';\nimport Logo from '../logo.svg';\n\nconst genNavTheme = (theme: Theme) => {\n  return {\n    ...genBaseStyle(theme),\n    root: {\n      maxHeight: NavHeight,\n      position: 'fixed',\n      width: '100%',\n      zIndex: 100,\n    },\n    muiRoot: {\n      backgroundColor: theme.palette.background.default,\n      display: 'flex',\n      justifyContent: 'center',\n      height: NavHeight,\n    },\n    toolBar: {\n      margin: 'auto',\n      width: '100%',\n      maxWidth: NavWidth,\n      height: `${NavHeight} !important`,\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    logo: {\n      background: `url(${Logo}) no-repeat center`,\n      width: '80px',\n      height: '48px',\n    },\n    tabs: {\n      backgroundColor: theme.palette.background.default,\n    },\n    searchRoot: {\n      padding: theme.spacing(0, 1),\n      height: '30px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 300,\n    },\n    customIconRoot: {\n      padding: 0,\n    },\n    navAndSearch: {\n      display: 'flex',\n      justifyContent: 'start',\n      alignItems: 'center',\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    divider: {\n      // height: 28,\n      margin: 4,\n    },\n    customTabRoot: {\n      minWidth: '20px',\n      marginRight: '20px',\n    },\n    customMenu: {\n      top: `${NavHeight} !important`,\n      width: PopOverRootWidth,\n    },\n    customMenuItem: {\n      fontSize: '14px',\n      lineHeight: 1,\n      height: PopOverElementHeight,\n      minHeight: PopOverElementHeight,\n    },\n    customListItemIcon: {\n      minWidth: 0,\n      marginRight: theme.spacing(2),\n      color: 'currentColor',\n    },\n  };\n};\n\nexport default genNavTheme;\n","import React from \"react\";\nimport RequestProvider from \"./contexts/request/\";\nimport RootProvider from \"./contexts/RootContext\";\nimport RootContainer from \"./pages/containers/RootContainer\";\n\nconst App: React.FC = () => {\n  return (\n    <RootProvider>\n      <RequestProvider>\n        <RootContainer />\n      </RequestProvider>\n    </RootProvider>\n  );\n};\n\nexport default App;\n","import React, {useContext} from 'react';\nimport {rootContext} from '../../contexts/RootContext';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst GlobalDialog = (props: any) => {\n  const {open = false, content = '', onConfirm, isCancelable = false} = props;\n  const {setDiaLog} = useContext(rootContext);\n\n  const _onConfirm = () => {\n    onConfirm();\n    setDiaLog({\n      open: false,\n      content: '',\n      onConfirm: null,\n      isCancelable: false,\n    });\n  };\n  const _cancel = () => {\n    setDiaLog({\n      open: false,\n      content: '',\n      onConfirm: null,\n      isCancelable: false,\n    });\n  };\n  return (\n    <Dialog onClose={_onConfirm} aria-labelledby=\"customized-dialog-title\" open={open}>\n      <DialogContent dividers>\n        <Typography gutterBottom>{content}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={_onConfirm} color=\"default\">\n          确认\n        </Button>\n        {isCancelable && (\n          <Button onClick={_cancel} color=\"default\">\n            取消\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default GlobalDialog;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {useContext} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {rootContext} from '../../contexts/RootContext';\nimport Login from '../Login';\nimport Register from '../Register';\nimport Main from './Main';\nimport GlobalDialog from '../../components/common/GlobalDialog';\nimport {ThemeProvider} from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ThemeMap} from '../../utils/consts/theme';\nimport * as route from '../../utils/consts/Route';\nfunction RootContainer() {\n  const {dialog, theme} = useContext(rootContext);\n  return (\n    <ThemeProvider theme={ThemeMap.get(theme)!}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Switch>\n          <Route path={route.LOGIN} component={Login} />\n          <Route path={route.REGISTER} component={Register} />\n          <Route path={route.ROOT} component={Main} />\n        </Switch>\n        <GlobalDialog {...dialog} />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default RootContainer;\n","import React from \"react\";\n\nconst Page404: React.FC = () => {\n  return <div className=\"404\">I am the 404 page</div>;\n};\n\nexport default Page404;\n","import React, {FC} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {useTheme} from '@material-ui/core/styles';\nimport Nav from '../../components/Nav';\nimport Landing from './Landing';\nimport Drafts from '../Drafts';\nimport DraftEditor from '../DraftEditor';\nimport About from '../About';\nimport Page404 from '../Page404';\nimport * as route from '../../utils/consts/Route';\nconst MainContainer: FC = () => {\n  const theme = useTheme();\n  return (\n    <>\n      <Nav />\n      <div\n        style={{\n          flexGrow: 1,\n          marginTop: `${theme.spacing(6)}px`,\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Switch>\n          <Route path={route.DRAFT} component={Drafts} />\n          {/* TODO: move path below to const*/}\n          <Route path=\"/draft/:draftID/edit\" component={DraftEditor} />\n          <Route path={route.WRITE} component={DraftEditor} />\n          <Route path={route.ABOUT} component={About} />\n          <Route exact path={route.ROOT} component={Landing} />\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default MainContainer;\n"],"sourceRoot":""}